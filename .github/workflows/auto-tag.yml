name: Tag, Simcraft & Release

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches: [main]

jobs:
  check-and-release:
    name: Check version & tag
    runs-on: ubuntu-latest
    
    outputs:
      version_changed: ${{ steps.check-version.outputs.version_changed }}
      version: ${{ steps.check-version.outputs.version }}
      tag_name: ${{ steps.check-version.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 2  # Besoin de 2 commits pour comparer
          token: ${{ secrets.PAT_TOKEN }}  # Utiliser le PAT au lieu du token par d√©faut

      # V√©rifier si la version a chang√© dans le .toc
      - name: Check version change
        id: check-version
        run: |
          # Version actuelle
          CURRENT_VERSION=$(grep "^## Version:" GuildLogistics.toc | sed 's/## Version: //' | tr -d '\r\n' | xargs)
          
          # Version pr√©c√©dente (commit parent)
          PREVIOUS_VERSION=$(git show HEAD~1:GuildLogistics.toc | grep "^## Version:" | sed 's/## Version: //' | tr -d '\r\n' | xargs)
          
          echo "Version actuelle: $CURRENT_VERSION"
          echo "Version pr√©c√©dente: $PREVIOUS_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "‚úÖ Version chang√©e de $PREVIOUS_VERSION vers $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "tag_name=v$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è Version inchang√©e: $CURRENT_VERSION"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.x'

      - name: Refresh SimulationCraft datasets
        run: python Tools/update_simc_data.py

      - name: Commit SimCraft updates
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          if git diff --quiet -- Data/SimCraft; then
            echo "No SimCraft changes detected."
            exit 0
          fi

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config url."https://${PAT_TOKEN}@github.com/".insteadOf "https://github.com/"

          git add Data/SimCraft
          git commit -m "chore(data): refresh SimCraft trinkets"
          git push origin HEAD:${GITHUB_REF_NAME}

      # Cr√©er et pusher le tag Git si la version a chang√©
      - name: Create and Push Git Tag
        if: steps.check-version.outputs.version_changed == 'true'
        run: |
          # Configurer Git avec le PAT pour l'authentification
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config url."https://${{ secrets.PAT_TOKEN }}@github.com/".insteadOf "https://github.com/"
          
          TAG_NAME="${{ steps.check-version.outputs.tag_name }}"
          VERSION="${{ steps.check-version.outputs.version }}"
          
          # V√©rifier si le tag existe d√©j√†
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Le tag $TAG_NAME existe d√©j√† localement"
            git tag -d "$TAG_NAME"  # Supprimer le tag local s'il existe
          fi
          
          echo "üè∑Ô∏è Cr√©ation du tag: $TAG_NAME"
          git tag -a "$TAG_NAME" -m "Release version $VERSION"
          
          echo "üì§ Push du tag vers GitHub avec PAT: $TAG_NAME"
          git push origin "$TAG_NAME"
          echo "‚úÖ Tag cr√©√© et pouss√© avec PAT: $TAG_NAME"
